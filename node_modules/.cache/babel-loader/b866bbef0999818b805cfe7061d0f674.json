{"remainingRequest":"/Users/jaredhughes/code/MassMutualFrontEnd/node_modules/babel-loader/lib/index.js!/Users/jaredhughes/code/MassMutualFrontEnd/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/jaredhughes/code/MassMutualFrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jaredhughes/code/MassMutualFrontEnd/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/jaredhughes/code/MassMutualFrontEnd/src/components/Emailing.vue?vue&type=template&id=3d21a3f6","dependencies":[{"path":"/Users/jaredhughes/code/MassMutualFrontEnd/src/components/Emailing.vue","mtime":1618271016945},{"path":"/Users/jaredhughes/code/MassMutualFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaredhughes/code/MassMutualFrontEnd/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jaredhughes/code/MassMutualFrontEnd/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/jaredhughes/code/MassMutualFrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaredhughes/code/MassMutualFrontEnd/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB2TW9kZWxUZXh0IGFzIF92TW9kZWxUZXh0LCB3aXRoRGlyZWN0aXZlcyBhcyBfd2l0aERpcmVjdGl2ZXMsIHdpdGhNb2RpZmllcnMgYXMgX3dpdGhNb2RpZmllcnMsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2sgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBpZDogImVtYWlsaW5nIgp9OwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJoMSIsIG51bGwsICJNYXNzTXV0dWFsIENvZGluZyBTYW1wbGUiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJwIiwgbnVsbCwgIlBsZWFzZSBlbnN1cmUgeW91IGhhdmUgdGhlIE5vZGVKUyBlbWFpbGluZyBBUEkgc2V0dXAgbG9jYWxseSIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF84ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfOSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzEwID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSkgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgbnVsbCwgW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsIF9ob2lzdGVkXzMsIF9ob2lzdGVkXzQsIF9ob2lzdGVkXzUsIF9jcmVhdGVWTm9kZSgiZm9ybSIsIHsKICAgIGlkOiAic2lnbnVwIiwKICAgIG1ldGhvZDogInBvc3QiLAogICAgb25TdWJtaXQ6IF9jYWNoZVs2XSB8fCAoX2NhY2hlWzZdID0gX3dpdGhNb2RpZmllcnMoZnVuY3Rpb24gKCkge30sIFsicHJldmVudCJdKSkKICB9LCBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgiaW5wdXQiLCB7CiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gX2N0eC5mcm9tRW1haWwgPSAkZXZlbnQ7CiAgICB9KSwKICAgIHBsYWNlaG9sZGVyOiAiRnJvbSBFbWFpbCIsCiAgICByZXF1aXJlZDogIiIKICB9LCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsVGV4dCwgX2N0eC5mcm9tRW1haWxdXSksIF9ob2lzdGVkXzYsIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuIF9jdHgudG9FbWFpbCA9ICRldmVudDsKICAgIH0pLAogICAgcGxhY2Vob2xkZXI6ICJUbyBFbWFpbCIsCiAgICByZXF1aXJlZDogIiIKICB9LCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsVGV4dCwgX2N0eC50b0VtYWlsXV0pLCBfaG9pc3RlZF83LCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiBfY3R4LmVtYWlsU3ViamVjdCA9ICRldmVudDsKICAgIH0pLAogICAgcGxhY2Vob2xkZXI6ICJTdWJqZWN0IiwKICAgIHJlcXVpcmVkOiAiIgogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCBfY3R4LmVtYWlsU3ViamVjdF1dKSwgX2hvaXN0ZWRfOCwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVWTm9kZSgiaW5wdXQiLCB7CiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gX2N0eC5lbWFpbFRleHQgPSAkZXZlbnQ7CiAgICB9KSwKICAgIHBsYWNlaG9sZGVyOiAiRW1haWwgVGV4dCIsCiAgICByZXF1aXJlZDogIiIKICB9LCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsVGV4dCwgX2N0eC5lbWFpbFRleHRdXSksIF9ob2lzdGVkXzksIF9ob2lzdGVkXzEwLCBfY3JlYXRlVk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVs1XSB8fCAoX2NhY2hlWzVdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX2N0eC5zZW5kRW1haWwgJiYgX2N0eC5zZW5kRW1haWwuYXBwbHkoX2N0eCwgYXJndW1lbnRzKTsKICAgIH0pLAogICAgdHlwZTogInN1Ym1pdCIKICB9LCAiU2VuZCBFbWFpbCIpXSwgMzIKICAvKiBIWURSQVRFX0VWRU5UUyAqLwogICldKV0pOwp9"},{"version":3,"sources":["/Users/jaredhughes/code/MassMutualFrontEnd/src/components/Emailing.vue"],"names":[],"mappings":";;AAEM,EAAA,EAAE,EAAC;;;8BACP,YAAA,CAAiC,IAAjC,EAAiC,IAAjC,EAAI,0BAAJ,EAA4B,CAAA;AAAA;AAA5B,C;;8BACA,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BACA,YAAA,CAAmE,GAAnE,EAAmE,IAAnE,EAAG,8DAAH,EAA+D,CAAA;AAAA;AAA/D,C;;8BACA,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BAE8D,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BACH,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BACG,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BACA,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;+BAC9D,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;;uBAXF,YAAA,CAeM,KAfN,EAeM,IAfN,EAeM,CAdL,YAAA,CAaK,KAbL,EAAA,UAAA,EAaK,CAZJ,UAYI,EAXJ,UAWI,EAVJ,UAUI,EATJ,UASI,EARJ,YAAA,CAOO,MAPP,EAOO;AAPD,IAAA,EAAE,EAAC,QAOF;AAPW,IAAA,MAAM,EAAC,MAOlB;AAP8B,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAX,YAAA,CAAmB,CAAR,EAAQ,CAAA,SAAA,CAAR,CAAA;AAOpC,GAPP,E,iBACA,YAAA,CAA8D,OAA9D,EAA8D;;aAA9C,IAAA,CAAA,SAAA,GAAS,M;MAAqC;AAAnC,IAAA,WAAW,EAAC,YAAuB;AAAV,IAAA,QAAQ,EAAR;AAAU,GAA9D,E,IAAA,E;;AAAA,G,iBAAgB,IAAA,CAAA,S,KAA8C,U,kBAC9D,YAAA,CAA2D,OAA3D,EAA2D;;aAA3C,IAAA,CAAA,OAAA,GAAO,M;MAAoC;AAAlC,IAAA,WAAW,EAAC,UAAsB;AAAX,IAAA,QAAQ,EAAR;AAAW,GAA3D,E,IAAA,E;;AAAA,G,iBAAgB,IAAA,CAAA,O,KAA2C,U,kBAC3D,YAAA,CAA8D,OAA9D,EAA8D;;aAA9C,IAAA,CAAA,YAAA,GAAY,M;MAAkC;AAAhC,IAAA,WAAW,EAAC,SAAoB;AAAV,IAAA,QAAQ,EAAR;AAAU,GAA9D,E,IAAA,E;;AAAA,G,iBAAgB,IAAA,CAAA,Y,KAA8C,U,kBAC9D,YAAA,CAA8D,OAA9D,EAA8D;;aAA9C,IAAA,CAAA,SAAA,GAAS,M;MAAqC;AAAnC,IAAA,WAAW,EAAC,YAAuB;AAAV,IAAA,QAAQ,EAAR;AAAU,GAA9D,E,IAAA,E;;AAAA,G,iBAAgB,IAAA,CAAA,S,KAA8C,U,EAC9D,W,EACA,YAAA,CAAgE,QAAhE,EAAgE;AAAnD,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,IAAA,CAAA,SAAA,IAAA,IAAA,CAAA,SAAA,OAAA,IAAA,YAAF;AAAA,KAAA,CAA8C;AAAjC,IAAA,IAAI,EAAC;AAA4B,GAAhE,EAA6C,YAA7C,C,CANA,E;;AAAA,GAQI,CAbL,CAcK,CAfN,C","sourcesContent":["<template>\n<div>\n <div id=\"emailing\">\n  <h1>MassMutual Coding Sample</h1>\n  <br>\n  <p>Please ensure you have the NodeJS emailing API setup locally</p>\n  <br>\n  <form id=\"signup\" method=\"post\" v-on:submit.prevent>\n  <input v-model=\"fromEmail\" placeholder=\"From Email\" required/><br>\n  <input v-model=\"toEmail\" placeholder=\"To Email\" required /><br>\n  <input v-model=\"emailSubject\" placeholder=\"Subject\" required/><br>\n  <input v-model=\"emailText\" placeholder=\"Email Text\" required/><br>\n  <br>\n  <button v-on:click=\"sendEmail\" type=\"submit\">Send Email</button>\n  </form>\n</div>\n</div>\n</template>\n<script>\nexport default {\n  name: 'Emailing',\n  methods: {\n    sendEmail: function () {\n      // `this` inside methods points to the Vue instance\n      this.request = {\n        from: this.fromEmail,\n        to: this.toEmail,\n        subject: this.emailSubject,\n        text: this.emailText\n      };\n      console.log(this.request);\n  if(this.fromEmail && this.toEmail) { \n    return fetch('http://{replaceWithLocalURI}/sendemail', { //Use local URL for testing NodeJS api ex\n      method: 'post',\n      mode: 'cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type' : 'application/json'\n      },\n      body: JSON.stringify(this.request)\n        }).then(result => {\n          console.log(result);\n          if(result){\n          alert('Email Sent to: ' + this.request.to + '!')\n          }\n      });\n  } else{\n    alert('Please provide From and To Email Addresses')\n  }    \n \n    }\n  }\n}\n</script>"],"sourceRoot":""}]}